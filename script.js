
// –ì–ª–æ–±–∞–ª—å–Ω—ã–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ
let currentUser = null;
let isAdmin = false;
let currentTheme = 'light';
let giveaways = [];
let userStats = {};

// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
document.addEventListener('DOMContentLoaded', function() {
    initializeApp();
});

// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è Telegram WebApp
function initializeApp() {
    // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º Telegram WebApp
    if (typeof Telegram !== 'undefined' && Telegram.WebApp) {
        Telegram.WebApp.ready();
        Telegram.WebApp.expand();
        
        // –ü–æ–ª—É—á–∞–µ–º –¥–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        currentUser = Telegram.WebApp.initDataUnsafe?.user;
        
        if (currentUser) {
            initializeUser();
        } else {
            // –î–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –±–µ–∑ Telegram
            currentUser = {
                id: 123456789,
                first_name: "–¢–µ—Å—Ç–æ–≤—ã–π",
                last_name: "–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å",
                username: "testuser"
            };
            initializeUser();
        }
    } else {
        // –î–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –±–µ–∑ Telegram
        currentUser = {
            id: 123456789,
            first_name: "–¢–µ—Å—Ç–æ–≤—ã–π",
            last_name: "–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å", 
            username: "testuser"
        };
        initializeUser();
    }
}

// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
async function initializeUser() {
    try {
        showLoading(true);
        
        // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –¥–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –Ω–∞ —Å–µ—Ä–≤–µ—Ä
        const response = await fetch('/api/auth', {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json',
            },
            body: JSON.stringify({
                user_id: currentUser.id,
                username: currentUser.username,
                first_name: currentUser.first_name,
                last_name: currentUser.last_name
            })
        });
        
        const userData = await response.json();
        
        if (userData.success) {
            isAdmin = userData.is_admin;
            userStats = userData.stats;
            
            // –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å
            setupUI();
            loadUserData();
            loadGiveaways();
            
            // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –≥–ª–∞–≤–Ω—É—é —Å—Ç—Ä–∞–Ω–∏—Ü—É
            showLoading(false);
        } else {
            showNotification('–û—à–∏–±–∫–∞ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏', 'error');
        }
    } catch (error) {
        console.error('–û—à–∏–±–∫–∞ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏:', error);
        showNotification('–û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ —Å–µ—Ä–≤–µ—Ä—É', 'error');
        showLoading(false);
    }
}

// –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞
function setupUI() {
    // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –∞–¥–º–∏–Ω—Å–∫–∏–µ —ç–ª–µ–º–µ–Ω—Ç—ã –µ—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –∞–¥–º–∏–Ω
    if (isAdmin) {
        document.body.classList.add('is-admin');
    }
    
    // –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ —Å–æ–±—ã—Ç–∏–π
    setupEventListeners();
    
    // –ó–∞–≥—Ä—É–∂–∞–µ–º —Ç–µ–º—É
    loadTheme();
    
    // –û–±–Ω–æ–≤–ª—è–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ
    updateUserInfo();
}

// –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤ —Å–æ–±—ã—Ç–∏–π
function setupEventListeners() {
    // –¢–∞–±—ã
    document.querySelectorAll('.tab-btn').forEach(btn => {
        btn.addEventListener('click', () => switchTab(btn.dataset.tab));
    });
    
    // –ê–¥–º–∏–Ω –Ω–∞–≤–∏–≥–∞—Ü–∏—è
    document.querySelectorAll('.admin-nav-btn').forEach(btn => {
        btn.addEventListener('click', () => switchAdminSection(btn.dataset.section));
    });
    
    // –ü–µ—Ä–µ–∫–ª—é—á–∞—Ç–µ–ª—å —Ç–µ–º—ã
    document.getElementById('theme-toggle').addEventListener('click', toggleTheme);
    
    // –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Ä–æ–∑—ã–≥—Ä—ã—à–µ–π
    document.getElementById('refresh-giveaways').addEventListener('click', loadGiveaways);
    
    // –ü–æ–∏—Å–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
    document.getElementById('user-search').addEventListener('input', debounce(searchUsers, 300));
    
    // –ó–∞–∫—Ä—ã—Ç–∏–µ –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –æ–∫–Ω–∞
    document.getElementById('modal-overlay').addEventListener('click', (e) => {
        if (e.target === e.currentTarget) closeModal();
    });
}

// –ü–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏–µ —Ç–∞–±–æ–≤
function switchTab(tabName) {
    // –£–±–∏—Ä–∞–µ–º –∞–∫—Ç–∏–≤–Ω—ã–µ –∫–ª–∞—Å—Å—ã
    document.querySelectorAll('.tab-btn').forEach(btn => btn.classList.remove('active'));
    document.querySelectorAll('.tab-content').forEach(content => content.classList.remove('active'));
    
    // –î–æ–±–∞–≤–ª—è–µ–º –∞–∫—Ç–∏–≤–Ω—ã–µ –∫–ª–∞—Å—Å—ã
    document.querySelector(`[data-tab="${tabName}"]`).classList.add('active');
    document.getElementById(`${tabName}-tab`).classList.add('active');
    
    // –ó–∞–≥—Ä—É–∂–∞–µ–º –¥–∞–Ω–Ω—ã–µ –¥–ª—è —Ç–∞–±–∞
    loadTabData(tabName);
}

// –ü–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏–µ –∞–¥–º–∏–Ω—Å–∫–∏—Ö —Å–µ–∫—Ü–∏–π
function switchAdminSection(sectionName) {
    // –£–±–∏—Ä–∞–µ–º –∞–∫—Ç–∏–≤–Ω—ã–µ –∫–ª–∞—Å—Å—ã
    document.querySelectorAll('.admin-nav-btn').forEach(btn => btn.classList.remove('active'));
    document.querySelectorAll('.admin-content').forEach(content => content.classList.remove('active'));
    
    // –î–æ–±–∞–≤–ª—è–µ–º –∞–∫—Ç–∏–≤–Ω—ã–µ –∫–ª–∞—Å—Å—ã
    document.querySelector(`[data-section="${sectionName}"]`).classList.add('active');
    document.getElementById(`admin-${sectionName}`).classList.add('active');
    
    // –ó–∞–≥—Ä—É–∂–∞–µ–º –¥–∞–Ω–Ω—ã–µ –¥–ª—è —Å–µ–∫—Ü–∏–∏
    loadAdminData(sectionName);
}

// –ó–∞–≥—Ä—É–∑–∫–∞ –¥–∞–Ω–Ω—ã—Ö –¥–ª—è —Ç–∞–±–æ–≤
function loadTabData(tabName) {
    switch(tabName) {
        case 'giveaways':
            loadGiveaways();
            break;
        case 'profile':
            loadUserProfile();
            break;
        case 'earn':
            loadEarnData();
            break;
        case 'admin':
            if (isAdmin) loadAdminData('overview');
            break;
    }
}

// –ó–∞–≥—Ä—É–∑–∫–∞ –¥–∞–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
async function loadUserData() {
    try {
        const response = await fetch(`/api/user/${currentUser.id}`);
        const data = await response.json();
        
        if (data.success) {
            userStats = data.user;
            updateUserBalance(data.user.balance);
            updateUserInfo();
        }
    } catch (error) {
        console.error('–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –¥–∞–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è:', error);
    }
}

// –ó–∞–≥—Ä—É–∑–∫–∞ —Ä–æ–∑—ã–≥—Ä—ã—à–µ–π
async function loadGiveaways() {
    try {
        const response = await fetch('/api/giveaways');
        const data = await response.json();
        
        if (data.success) {
            giveaways = data.giveaways;
            renderGiveaways();
        } else {
            showNotification('–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ —Ä–æ–∑—ã–≥—Ä—ã—à–µ–π', 'error');
        }
    } catch (error) {
        console.error('–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ —Ä–æ–∑—ã–≥—Ä—ã—à–µ–π:', error);
        showNotification('–û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ —Å–µ—Ä–≤–µ—Ä—É', 'error');
    }
}

// –û—Ç—Ä–∏—Å–æ–≤–∫–∞ —Ä–æ–∑—ã–≥—Ä—ã—à–µ–π
function renderGiveaways() {
    const container = document.getElementById('giveaways-list');
    
    if (giveaways.length === 0) {
        container.innerHTML = `
            <div class="empty-state">
                <div style="font-size: 3rem; margin-bottom: 1rem;">üéÅ</div>
                <h3>–ù–µ—Ç –∞–∫—Ç–∏–≤–Ω—ã—Ö —Ä–æ–∑—ã–≥—Ä—ã—à–µ–π</h3>
                <p>–ù–æ–≤—ã–µ —Ä–æ–∑—ã–≥—Ä—ã—à–∏ –ø–æ—è–≤—è—Ç—Å—è –∑–¥–µ—Å—å</p>
            </div>
        `;
        return;
    }
    
    container.innerHTML = giveaways.map(giveaway => `
        <div class="giveaway-card" onclick="openGiveaway(${giveaway.id})">
            <div class="giveaway-header">
                <div class="giveaway-image">
                    ${giveaway.photo_file_id ? 
                        `<img src="/api/photo/${giveaway.photo_file_id}" alt="${giveaway.name}">` : 
                        'üéÅ'
                    }
                </div>
                <div class="giveaway-title">
                    <h3>${giveaway.name}</h3>
                    <div class="giveaway-status">–ê–∫—Ç–∏–≤–Ω—ã–π –¥–æ ${giveaway.end_date}</div>
                </div>
            </div>
            
            <div class="giveaway-description">
                ${giveaway.description}
            </div>
            
            <div class="giveaway-details">
                <div class="detail-item">
                    <span class="detail-label">–£—á–∞—Å—Ç–Ω–∏–∫–æ–≤</span>
                    <span class="detail-value">${giveaway.participants_count || 0}</span>
                </div>
                <div class="detail-item">
                    <span class="detail-label">–í—Å–µ–≥–æ –±–∏–ª–µ—Ç–æ–≤</span>
                    <span class="detail-value">${giveaway.total_tickets || 0}</span>
                </div>
                <div class="detail-item">
                    <span class="detail-label">–ü—Ä–∏–∑–æ–≤—ã—Ö –º–µ—Å—Ç</span>
                    <span class="detail-value">${giveaway.prize_places}</span>
                </div>
                ${giveaway.user_tickets ? `
                <div class="detail-item">
                    <span class="detail-label">–í–∞—à–∏ –±–∏–ª–µ—Ç—ã</span>
                    <span class="detail-value">${giveaway.user_tickets}</span>
                </div>
                ` : ''}
            </div>
            
            <div class="giveaway-actions">
                ${giveaway.user_tickets > 0 ? 
                    `<button class="giveaway-btn btn-success" onclick="event.stopPropagation(); addMoreTickets(${giveaway.id})">
                        ‚ûï –î–æ–±–∞–≤–∏—Ç—å –±–∏–ª–µ—Ç—ã
                    </button>` :
                    `<button class="giveaway-btn btn-primary" onclick="event.stopPropagation(); participateInGiveaway(${giveaway.id})">
                        üéØ –£—á–∞—Å—Ç–≤–æ–≤–∞—Ç—å
                    </button>`
                }
                <button class="giveaway-btn btn-secondary" onclick="event.stopPropagation(); viewGiveawayDetails(${giveaway.id})">
                    üìã –ü–æ–¥—Ä–æ–±–Ω–µ–µ
                </button>
            </div>
        </div>
    `).join('');
}

// –û—Ç–∫—Ä—ã—Ç–∏–µ —Ä–æ–∑—ã–≥—Ä—ã—à–∞
function openGiveaway(giveawayId) {
    const giveaway = giveaways.find(g => g.id === giveawayId);
    if (!giveaway) return;
    
    viewGiveawayDetails(giveawayId);
}

// –ü—Ä–æ—Å–º–æ—Ç—Ä –¥–µ—Ç–∞–ª–µ–π —Ä–æ–∑—ã–≥—Ä—ã—à–∞
function viewGiveawayDetails(giveawayId) {
    const giveaway = giveaways.find(g => g.id === giveawayId);
    if (!giveaway) return;
    
    const prizesHtml = giveaway.prizes ? 
        Object.entries(giveaway.prizes).map(([place, prize]) => `
            <div class="prize-item">
                <span class="prize-place">${getPlaceMedal(place)} ${place} –º–µ—Å—Ç–æ:</span>
                <span class="prize-description">${prize}</span>
            </div>
        `).join('') : 
        '<p>–ü—Ä–∏–∑—ã –±—É–¥—É—Ç –æ–±—ä—è–≤–ª–µ–Ω—ã –ø–æ–∑–∂–µ</p>';
    
    const modalContent = `
        <div class="giveaway-details-modal">
            <div class="modal-giveaway-header">
                <h2>${giveaway.name}</h2>
                ${giveaway.photo_file_id ? 
                    `<img src="/api/photo/${giveaway.photo_file_id}" alt="${giveaway.name}" class="modal-giveaway-image">` : 
                    ''
                }
            </div>
            
            <div class="modal-section">
                <h3>üìù –û–ø–∏—Å–∞–Ω–∏–µ</h3>
                <p>${giveaway.description}</p>
            </div>
            
            <div class="modal-section">
                <h3>üèÜ –ü—Ä–∏–∑—ã</h3>
                <div class="prizes-list">
                    ${prizesHtml}
                </div>
            </div>
            
            <div class="modal-section">
                <h3>üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞</h3>
                <div class="stats-row">
                    <div class="stat-item">
                        <strong>–£—á–∞—Å—Ç–Ω–∏–∫–æ–≤:</strong> ${giveaway.participants_count || 0}
                    </div>
                    <div class="stat-item">
                        <strong>–í—Å–µ–≥–æ –±–∏–ª–µ—Ç–æ–≤:</strong> ${giveaway.total_tickets || 0}
                    </div>
                    <div class="stat-item">
                        <strong>–ù–∞—á–∞–ª–æ:</strong> ${giveaway.start_date}
                    </div>
                    <div class="stat-item">
                        <strong>–û–∫–æ–Ω—á–∞–Ω–∏–µ:</strong> ${giveaway.end_date}
                    </div>
                </div>
                
                ${giveaway.user_tickets ? `
                <div class="user-participation">
                    <h4>–í–∞—à–µ —É—á–∞—Å—Ç–∏–µ</h4>
                    <p>–£ –≤–∞—Å ${giveaway.user_tickets} –±–∏–ª–µ—Ç–æ–≤ –≤ —ç—Ç–æ–º —Ä–æ–∑—ã–≥—Ä—ã—à–µ</p>
                    ${giveaway.total_tickets > 0 ? 
                        `<p>–í–∞—à–∏ —à–∞–Ω—Å—ã: ${((giveaway.user_tickets / giveaway.total_tickets) * 100).toFixed(2)}%</p>` : 
                        ''
                    }
                </div>
                ` : ''}
            </div>
            
            <div class="modal-actions">
                ${giveaway.user_tickets > 0 ? 
                    `<button class="btn-primary" onclick="addMoreTickets(${giveaway.id})">
                        ‚ûï –î–æ–±–∞–≤–∏—Ç—å –±–∏–ª–µ—Ç—ã
                    </button>` :
                    `<button class="btn-primary" onclick="participateInGiveaway(${giveaway.id})">
                        üéØ –£—á–∞—Å—Ç–≤–æ–≤–∞—Ç—å –≤ —Ä–æ–∑—ã–≥—Ä—ã—à–µ
                    </button>`
                }
                <button class="btn-secondary" onclick="closeModal()">–ó–∞–∫—Ä—ã—Ç—å</button>
            </div>
        </div>
    `;
    
    showModal('–î–µ—Ç–∞–ª–∏ —Ä–æ–∑—ã–≥—Ä—ã—à–∞', modalContent);
}

// –£—á–∞—Å—Ç–∏–µ –≤ —Ä–æ–∑—ã–≥—Ä—ã—à–µ
function participateInGiveaway(giveawayId) {
    const modalContent = `
        <div class="participate-modal">
            <p>–°–∫–æ–ª—å–∫–æ –±–∏–ª–µ—Ç–æ–≤ –≤—ã —Ö–æ—Ç–∏—Ç–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –¥–ª—è —É—á–∞—Å—Ç–∏—è?</p>
            <div class="current-balance">
                –î–æ—Å—Ç—É–ø–Ω–æ –±–∏–ª–µ—Ç–æ–≤: <strong id="available-balance">${userStats.balance || 0}</strong>
            </div>
            
            <div class="tickets-input-section">
                <label for="tickets-count">–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –±–∏–ª–µ—Ç–æ–≤:</label>
                <div class="tickets-input-group">
                    <button type="button" onclick="changeTicketsCount(-1)">-</button>
                    <input type="number" id="tickets-count" value="1" min="1" max="${userStats.balance || 0}">
                    <button type="button" onclick="changeTicketsCount(1)">+</button>
                </div>
                <div class="quick-buttons">
                    <button type="button" onclick="setTicketsCount(1)">1</button>
                    <button type="button" onclick="setTicketsCount(5)">5</button>
                    <button type="button" onclick="setTicketsCount(10)">10</button>
                    <button type="button" onclick="setTicketsCount(${userStats.balance || 0})">–í—Å–µ</button>
                </div>
            </div>
            
            <div class="modal-actions">
                <button class="btn-primary" onclick="confirmParticipation(${giveawayId})">
                    üéØ –£—á–∞—Å—Ç–≤–æ–≤–∞—Ç—å
                </button>
                <button class="btn-secondary" onclick="closeModal()">–û—Ç–º–µ–Ω–∞</button>
            </div>
        </div>
    `;
    
    showModal('–£—á–∞—Å—Ç–∏–µ –≤ —Ä–æ–∑—ã–≥—Ä—ã—à–µ', modalContent);
}

// –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –±–∏–ª–µ—Ç–æ–≤
function addMoreTickets(giveawayId) {
    participateInGiveaway(giveawayId); // –ò—Å–ø–æ–ª—å–∑—É–µ–º —Ç—É –∂–µ –º–æ–¥–∞–ª–∫—É
}

// –ò–∑–º–µ–Ω–µ–Ω–∏–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–∞ –±–∏–ª–µ—Ç–æ–≤
function changeTicketsCount(delta) {
    const input = document.getElementById('tickets-count');
    const currentValue = parseInt(input.value) || 1;
    const newValue = Math.max(1, Math.min(userStats.balance || 0, currentValue + delta));
    input.value = newValue;
}

// –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∫–æ–ª–∏—á–µ—Å—Ç–≤–∞ –±–∏–ª–µ—Ç–æ–≤
function setTicketsCount(count) {
    const input = document.getElementById('tickets-count');
    input.value = Math.max(1, Math.min(userStats.balance || 0, count));
}

// –ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ —É—á–∞—Å—Ç–∏—è
async function confirmParticipation(giveawayId) {
    const ticketsCount = parseInt(document.getElementById('tickets-count').value);
    
    if (ticketsCount <= 0 || ticketsCount > (userStats.balance || 0)) {
        showNotification('–ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –±–∏–ª–µ—Ç–æ–≤', 'error');
        return;
    }
    
    try {
        const response = await fetch('/api/participate', {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json',
            },
            body: JSON.stringify({
                user_id: currentUser.id,
                giveaway_id: giveawayId,
                tickets_count: ticketsCount
            })
        });
        
        const data = await response.json();
        
        if (data.success) {
            showNotification(`–£—Å–ø–µ—à–Ω–æ! –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–æ ${ticketsCount} –±–∏–ª–µ—Ç–æ–≤`, 'success');
            closeModal();
            loadUserData();
            loadGiveaways();
        } else {
            showNotification(data.message || '–û—à–∏–±–∫–∞ —É—á–∞—Å—Ç–∏—è', 'error');
        }
    } catch (error) {
        console.error('–û—à–∏–±–∫–∞ —É—á–∞—Å—Ç–∏—è:', error);
        showNotification('–û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ —Å–µ—Ä–≤–µ—Ä—É', 'error');
    }
}

// –ó–∞–≥—Ä—É–∑–∫–∞ –ø—Ä–æ—Ñ–∏–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
async function loadUserProfile() {
    try {
        const response = await fetch(`/api/user/${currentUser.id}/profile`);
        const data = await response.json();
        
        if (data.success) {
            updateProfileData(data.profile);
        }
    } catch (error) {
        console.error('–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –ø—Ä–æ—Ñ–∏–ª—è:', error);
    }
}

// –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö –ø—Ä–æ—Ñ–∏–ª—è
function updateProfileData(profile) {
    // –û–±–Ω–æ–≤–ª—è–µ–º –æ—Å–Ω–æ–≤–Ω—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é
    document.getElementById('profile-name').textContent = 
        `${currentUser.first_name} ${currentUser.last_name || ''}`.trim();
    document.getElementById('profile-id').textContent = `ID: ${currentUser.id}`;
    
    // –û–±–Ω–æ–≤–ª—è–µ–º –∏–Ω–∏—Ü–∏–∞–ª—ã
    const initials = (currentUser.first_name[0] + (currentUser.last_name?.[0] || '')).toUpperCase();
    document.getElementById('profile-initials').textContent = initials;
    
    // –û–±–Ω–æ–≤–ª—è–µ–º —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É
    document.getElementById('total-tickets').textContent = profile.total_tickets || 0;
    document.getElementById('active-participations').textContent = profile.active_participations || 0;
    document.getElementById('referrals-count').textContent = profile.referrals_count || 0;
    
    // –û–±–Ω–æ–≤–ª—è–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —Å–≥–æ—Ä–∞–µ–º—ã—Ö –±–∏–ª–µ—Ç–∞—Ö
    if (profile.expiring_tickets && profile.expiring_tickets.total > 0) {
        document.getElementById('expiring-tickets-info').classList.remove('hidden');
        document.getElementById('expiring-details').textContent = 
            `${profile.expiring_tickets.total} –±–∏–ª–µ—Ç–æ–≤ —Å–≥–æ—Ä—è—Ç —á–µ—Ä–µ–∑ ${profile.expiring_tickets.days_until_expiry} –¥–Ω–µ–π`;
    } else {
        document.getElementById('expiring-tickets-info').classList.add('hidden');
    }
}

// –ó–∞–≥—Ä—É–∑–∫–∞ –¥–∞–Ω–Ω—ã—Ö –∑–∞—Ä–∞–±–æ—Ç–∫–∞
async function loadEarnData() {
    try {
        const response = await fetch(`/api/user/${currentUser.id}/earn`);
        const data = await response.json();
        
        if (data.success) {
            updateEarnData(data.earn);
        }
    } catch (error) {
        console.error('–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –¥–∞–Ω–Ω—ã—Ö –∑–∞—Ä–∞–±–æ—Ç–∫–∞:', error);
    }
}

// –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö –∑–∞—Ä–∞–±–æ—Ç–∫–∞
function updateEarnData(earnData) {
    document.getElementById('referral-count').textContent = earnData.referrals_count || 0;
    document.getElementById('referral-earned').textContent = earnData.referral_earned || 0;
    
    // –û–±–Ω–æ–≤–ª—è–µ–º –∫–Ω–æ–ø–∫—É –ø–æ–¥–ø–∏—Å–æ–∫
    const subscriptionBtn = document.getElementById('subscription-btn');
    const subscriptionCard = document.getElementById('subscription-card');
    
    if (earnData.can_get_subscription_tickets) {
        subscriptionBtn.textContent = '–ü–æ–ª—É—á–∏—Ç—å –±–∏–ª–µ—Ç—ã';
        subscriptionBtn.disabled = false;
        subscriptionCard.classList.remove('disabled');
    } else {
        subscriptionBtn.textContent = `–°–ª–µ–¥—É—é—â–∏–µ —á–µ—Ä–µ–∑ ${earnData.days_until_next || 0} –¥–Ω–µ–π`;
        subscriptionBtn.disabled = true;
        subscriptionCard.classList.add('disabled');
    }
}

// –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ–¥–ø–∏—Å–æ–∫
async function checkSubscriptions() {
    try {
        const response = await fetch('/api/check-subscriptions', {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json',
            },
            body: JSON.stringify({
                user_id: currentUser.id
            })
        });
        
        const data = await response.json();
        
        if (data.success) {
            if (data.got_tickets) {
                showNotification('üéâ –í—ã –ø–æ–ª—É—á–∏–ª–∏ 10 –±–∏–ª–µ—Ç–æ–≤ –∑–∞ –ø–æ–¥–ø–∏—Å–∫–∏!', 'success');
                loadUserData();
                loadEarnData();
            } else {
                showChannelsModal(data.channels);
            }
        } else {
            showNotification(data.message || '–û—à–∏–±–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏ –ø–æ–¥–ø–∏—Å–æ–∫', 'error');
        }
    } catch (error) {
        console.error('–û—à–∏–±–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏ –ø–æ–¥–ø–∏—Å–æ–∫:', error);
        showNotification('–û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ —Å–µ—Ä–≤–µ—Ä—É', 'error');
    }
}

// –ü–æ–∫–∞–∑–∞—Ç—å –º–æ–¥–∞–ª–∫—É —Å –∫–∞–Ω–∞–ª–∞–º–∏
function showChannelsModal(channels) {
    const channelsHtml = channels.map(channel => `
        <div class="channel-item">
            <span class="channel-name">${channel}</span>
            <a href="https://t.me/${channel.replace('@', '')}" target="_blank" class="channel-link">
                –ü–æ–¥–ø–∏—Å–∞—Ç—å—Å—è
            </a>
        </div>
    `).join('');
    
    const modalContent = `
        <div class="channels-modal">
            <p>–ü–æ–¥–ø–∏—à–∏—Ç–µ—Å—å –Ω–∞ –≤—Å–µ –Ω–∞—à–∏ –∫–∞–Ω–∞–ª—ã –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è 10 –±–∏–ª–µ—Ç–æ–≤:</p>
            <div class="channels-list">
                ${channelsHtml}
            </div>
            <div class="modal-actions">
                <button class="btn-primary" onclick="checkSubscriptions()">
                    ‚úÖ –ü—Ä–æ–≤–µ—Ä–∏—Ç—å –ø–æ–¥–ø–∏—Å–∫–∏
                </button>
                <button class="btn-secondary" onclick="closeModal()">–ó–∞–∫—Ä—ã—Ç—å</button>
            </div>
        </div>
    `;
    
    showModal('–ü–æ–¥–ø–∏—à–∏—Ç–µ—Å—å –Ω–∞ –∫–∞–Ω–∞–ª—ã', modalContent);
}

// –°–¥–µ–ª–∞—Ç—å —Å—Ç–æ—Ä–∏—Å
function makeStory() {
    const modalContent = `
        <div class="story-modal">
            <h3>üì∏ –ö–∞–∫ –ø–æ–ª—É—á–∏—Ç—å +50 –±–∏–ª–µ—Ç–æ–≤ –∑–∞ —Å—Ç–æ—Ä–∏—Å:</h3>
            <ol>
                <li>–°–¥–µ–ª–∞–π—Ç–µ —Å–∫—Ä–∏–Ω—à–æ—Ç –Ω–∞—à–µ–≥–æ –±–æ—Ç–∞</li>
                <li>–û–ø—É–±–ª–∏–∫—É–π—Ç–µ —Å—Ç–æ—Ä–∏—Å –≤ Instagram –∏–ª–∏ –¥—Ä—É–≥–æ–π —Å–æ—Ü—Å–µ—Ç–∏</li>
                <li>–û—Ç–ø—Ä–∞–≤—å—Ç–µ —Å–∫—Ä–∏–Ω—à–æ—Ç —Å—Ç–æ—Ä–∏—Å –≤ –ø–æ–¥–¥–µ—Ä–∂–∫—É @Kalashnikeforce</li>
                <li>–ü–æ–ª—É—á–∏—Ç–µ 50 –±–∏–ª–µ—Ç–æ–≤ –ø–æ—Å–ª–µ –ø—Ä–æ–≤–µ—Ä–∫–∏!</li>
            </ol>
            <div class="modal-actions">
                <button class="btn-primary" onclick="openSupport()">
                    üí¨ –ù–∞–ø–∏—Å–∞—Ç—å –≤ –ø–æ–¥–¥–µ—Ä–∂–∫—É
                </button>
                <button class="btn-secondary" onclick="closeModal()">–ü–æ–Ω—è—Ç–Ω–æ</button>
            </div>
        </div>
    `;
    
    showModal('–°—Ç–æ—Ä–∏—Å –∑–∞ –±–∏–ª–µ—Ç—ã', modalContent);
}

// –û—Ç–∫—Ä—ã—Ç—å –ø–æ–¥–¥–µ—Ä–∂–∫—É
function openSupport() {
    if (typeof Telegram !== 'undefined' && Telegram.WebApp) {
        Telegram.WebApp.openTelegramLink('https://t.me/Kalashnikeforce');
    } else {
        window.open('https://t.me/Kalashnikeforce', '_blank');
    }
    closeModal();
}

// –ü–æ–¥–µ–ª–∏—Ç—å—Å—è —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω–æ–π —Å—Å—ã–ª–∫–æ–π
async function shareReferralLink() {
    try {
        const response = await fetch(`/api/user/${currentUser.id}/referral`);
        const data = await response.json();
        
        if (data.success) {
            const referralLink = data.referral_link;
            
            if (typeof Telegram !== 'undefined' && Telegram.WebApp) {
                Telegram.WebApp.openTelegramLink(`https://t.me/share/url?url=${encodeURIComponent(referralLink)}&text=${encodeURIComponent('üéâ –ü—Ä–∏—Å–æ–µ–¥–∏–Ω—è–π—Å—è –∫ —Ä–æ–∑—ã–≥—Ä—ã—à–∞–º –∏ –≤—ã–∏–≥—Ä—ã–≤–∞–π –∫—Ä—É—Ç—ã–µ –ø—Ä–∏–∑—ã!')}`);
            } else {
                // –ö–æ–ø–∏—Ä—É–µ–º –≤ –±—É—Ñ–µ—Ä –æ–±–º–µ–Ω–∞
                navigator.clipboard.writeText(referralLink).then(() => {
                    showNotification('–°—Å—ã–ª–∫–∞ —Å–∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∞ –≤ –±—É—Ñ–µ—Ä –æ–±–º–µ–Ω–∞', 'success');
                });
            }
        }
    } catch (error) {
        console.error('–û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω–æ–π —Å—Å—ã–ª–∫–∏:', error);
        showNotification('–û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è —Å—Å—ã–ª–∫–∏', 'error');
    }
}

// –ü–æ–∫–∞–∑–∞—Ç—å –º–æ–∏ –±–∏–ª–µ—Ç—ã
async function showMyTickets() {
    try {
        const response = await fetch(`/api/user/${currentUser.id}/tickets`);
        const data = await response.json();
        
        if (data.success) {
            const ticketsHtml = data.tickets.length > 0 ? 
                data.tickets.map(ticket => `
                    <div class="ticket-item">
                        <span class="ticket-number">‚Ññ${ticket.number}</span>
                        <span class="ticket-giveaway">${ticket.giveaway_name}</span>
                        <span class="ticket-date">${formatDate(ticket.obtained_at)}</span>
                    </div>
                `).join('') :
                '<p class="empty-message">–£ –≤–∞—Å –ø–æ–∫–∞ –Ω–µ—Ç –∞–∫—Ç–∏–≤–Ω—ã—Ö –±–∏–ª–µ—Ç–æ–≤</p>';
            
            const modalContent = `
                <div class="tickets-modal">
                    <h3>üé´ –í–∞—à–∏ –∞–∫—Ç–∏–≤–Ω—ã–µ –±–∏–ª–µ—Ç—ã (${data.tickets.length})</h3>
                    <div class="tickets-list">
                        ${ticketsHtml}
                    </div>
                    <div class="modal-actions">
                        <button class="btn-secondary" onclick="closeModal()">–ó–∞–∫—Ä—ã—Ç—å</button>
                    </div>
                </div>
            `;
            
            showModal('–ú–æ–∏ –±–∏–ª–µ—Ç—ã', modalContent);
        }
    } catch (error) {
        console.error('–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –±–∏–ª–µ—Ç–æ–≤:', error);
        showNotification('–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –±–∏–ª–µ—Ç–æ–≤', 'error');
    }
}

// –ü–æ–∫–∞–∑–∞—Ç—å –ø—Ä–æ—à–ª—ã–µ —Ä–æ–∑—ã–≥—Ä—ã—à–∏
async function showPastGiveaways() {
    try {
        const response = await fetch(`/api/user/${currentUser.id}/past-giveaways`);
        const data = await response.json();
        
        if (data.success) {
            const historyHtml = data.giveaways.length > 0 ?
                data.giveaways.map(giveaway => `
                    <div class="history-item ${giveaway.won ? 'won' : ''}">
                        <div class="history-header">
                            <h4>${giveaway.name}</h4>
                            <span class="history-status">
                                ${giveaway.won ? 'üèÜ –í—ã–∏–≥—Ä–∞–ª–∏!' : 'üòî –ù–µ –≤—ã–∏–≥—Ä–∞–ª–∏'}
                            </span>
                        </div>
                        <div class="history-details">
                            <span>–ë–∏–ª–µ—Ç–æ–≤: ${giveaway.user_tickets_count}</span>
                            <span>–ó–∞–≤–µ—Ä—à–µ–Ω: ${giveaway.end_date}</span>
                        </div>
                    </div>
                `).join('') :
                '<p class="empty-message">–í—ã –µ—â–µ –Ω–µ —É—á–∞—Å—Ç–≤–æ–≤–∞–ª–∏ –≤ –∑–∞–≤–µ—Ä—à–µ–Ω–Ω—ã—Ö —Ä–æ–∑—ã–≥—Ä—ã—à–∞—Ö</p>';
            
            const modalContent = `
                <div class="history-modal">
                    <h3>üìú –ò—Å—Ç–æ—Ä–∏—è —É—á–∞—Å—Ç–∏–π</h3>
                    <div class="history-list">
                        ${historyHtml}
                    </div>
                    <div class="modal-actions">
                        <button class="btn-secondary" onclick="closeModal()">–ó–∞–∫—Ä—ã—Ç—å</button>
                    </div>
                </div>
            `;
            
            showModal('–ò—Å—Ç–æ—Ä–∏—è —É—á–∞—Å—Ç–∏–π', modalContent);
        }
    } catch (error) {
        console.error('–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –∏—Å—Ç–æ—Ä–∏–∏:', error);
        showNotification('–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –∏—Å—Ç–æ—Ä–∏–∏', 'error');
    }
}

// –ü–æ–∫–∞–∑–∞—Ç—å —Ä–µ—Ñ–µ—Ä–∞–ª–æ–≤
async function showReferrals() {
    try {
        const response = await fetch(`/api/user/${currentUser.id}/referrals`);
        const data = await response.json();
        
        if (data.success) {
            const referralsHtml = data.referrals.length > 0 ?
                data.referrals.map(referral => `
                    <div class="referral-item">
                        <div class="referral-info">
                            <span class="referral-name">${referral.full_name}</span>
                            <span class="referral-username">@${referral.username || '–Ω–µ—Ç'}</span>
                        </div>
                        <div class="referral-date">${formatDate(referral.created_at)}</div>
                    </div>
                `).join('') :
                '<p class="empty-message">–£ –≤–∞—Å –ø–æ–∫–∞ –Ω–µ—Ç —Ä–µ—Ñ–µ—Ä–∞–ª–æ–≤</p>';
            
            const modalContent = `
                <div class="referrals-modal">
                    <h3>üë• –í–∞—à–∏ —Ä–µ—Ñ–µ—Ä–∞–ª—ã (${data.referrals.length})</h3>
                    <div class="referrals-stats">
                        <div class="stat">
                            <strong>–ü—Ä–∏–≥–ª–∞—à–µ–Ω–æ:</strong> ${data.referrals.length}
                        </div>
                        <div class="stat">
                            <strong>–ó–∞—Ä–∞–±–æ—Ç–∞–Ω–æ:</strong> ${data.earned} –±–∏–ª–µ—Ç–æ–≤
                        </div>
                    </div>
                    <div class="referrals-list">
                        ${referralsHtml}
                    </div>
                    <div class="modal-actions">
                        <button class="btn-primary" onclick="shareReferralLink()">
                            üì§ –ü—Ä–∏–≥–ª–∞—Å–∏—Ç—å –µ—â–µ
                        </button>
                        <button class="btn-secondary" onclick="closeModal()">–ó–∞–∫—Ä—ã—Ç—å</button>
                    </div>
                </div>
            `;
            
            showModal('–ú–æ–∏ —Ä–µ—Ñ–µ—Ä–∞–ª—ã', modalContent);
        }
    } catch (error) {
        console.error('–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ —Ä–µ—Ñ–µ—Ä–∞–ª–æ–≤:', error);
        showNotification('–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ —Ä–µ—Ñ–µ—Ä–∞–ª–æ–≤', 'error');
    }
}

// –ê–î–ú–ò–ù–°–ö–ò–ï –§–£–ù–ö–¶–ò–ò

// –ó–∞–≥—Ä—É–∑–∫–∞ –∞–¥–º–∏–Ω—Å–∫–∏—Ö –¥–∞–Ω–Ω—ã—Ö
async function loadAdminData(section) {
    if (!isAdmin) return;
    
    switch(section) {
        case 'overview':
            loadAdminOverview();
            break;
        case 'giveaways':
            loadAdminGiveaways();
            break;
        case 'users':
            loadAdminUsers();
            break;
        case 'statistics':
            loadAdminStatistics();
            break;
    }
}

// –ó–∞–≥—Ä—É–∑–∫–∞ –æ–±–∑–æ—Ä–∞ –∞–¥–º–∏–Ω–∫–∏
async function loadAdminOverview() {
    try {
        const response = await fetch('/api/admin/overview');
        const data = await response.json();
        
        if (data.success) {
            document.getElementById('total-users').textContent = data.stats.total_users;
            document.getElementById('active-giveaways-count').textContent = data.stats.active_giveaways;
            document.getElementById('total-tickets-issued').textContent = data.stats.total_tickets;
            document.getElementById('completed-giveaways-count').textContent = data.stats.completed_giveaways;
        }
    } catch (error) {
        console.error('–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –æ–±–∑–æ—Ä–∞:', error);
    }
}

// –ó–∞–≥—Ä—É–∑–∫–∞ –∞–¥–º–∏–Ω—Å–∫–∏—Ö —Ä–æ–∑—ã–≥—Ä—ã—à–µ–π
async function loadAdminGiveaways() {
    try {
        const response = await fetch('/api/admin/giveaways');
        const data = await response.json();
        
        if (data.success) {
            renderAdminGiveaways(data.giveaways);
        }
    } catch (error) {
        console.error('–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –∞–¥–º–∏–Ω—Å–∫–∏—Ö —Ä–æ–∑—ã–≥—Ä—ã—à–µ–π:', error);
    }
}

// –û—Ç—Ä–∏—Å–æ–≤–∫–∞ –∞–¥–º–∏–Ω—Å–∫–∏—Ö —Ä–æ–∑—ã–≥—Ä—ã—à–µ–π
function renderAdminGiveaways(adminGiveaways) {
    const container = document.getElementById('admin-giveaways-list');
    
    if (adminGiveaways.length === 0) {
        container.innerHTML = '<p class="empty-message">–ù–µ—Ç —Ä–æ–∑—ã–≥—Ä—ã—à–µ–π</p>';
        return;
    }
    
    container.innerHTML = adminGiveaways.map(giveaway => `
        <div class="admin-giveaway-card">
            <div class="admin-giveaway-header">
                <h4>${giveaway.name}</h4>
                <span class="status-badge ${giveaway.status}">${giveaway.status === 'active' ? '–ê–∫—Ç–∏–≤–Ω—ã–π' : '–ó–∞–≤–µ—Ä—à–µ–Ω'}</span>
            </div>
            <div class="admin-giveaway-stats">
                <span>–£—á–∞—Å—Ç–Ω–∏–∫–æ–≤: ${giveaway.participants_count}</span>
                <span>–ë–∏–ª–µ—Ç–æ–≤: ${giveaway.total_tickets}</span>
                <span>–î–æ: ${giveaway.end_date}</span>
            </div>
            <div class="admin-giveaway-actions">
                <button class="admin-btn" onclick="viewGiveawayParticipants(${giveaway.id})">
                    üë• –£—á–∞—Å—Ç–Ω–∏–∫–∏
                </button>
                ${giveaway.status === 'active' ? `
                    <button class="admin-btn" onclick="editGiveaway(${giveaway.id})">
                        ‚úèÔ∏è –†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å
                    </button>
                    <button class="admin-btn success" onclick="completeGiveaway(${giveaway.id})">
                        üèÜ –ó–∞–≤–µ—Ä—à–∏—Ç—å
                    </button>
                ` : ''}
                <button class="admin-btn danger" onclick="deleteGiveaway(${giveaway.id})">
                    üóëÔ∏è –£–¥–∞–ª–∏—Ç—å
                </button>
            </div>
        </div>
    `).join('');
}

// –°–æ–∑–¥–∞–Ω–∏–µ —Ä–æ–∑—ã–≥—Ä—ã—à–∞
function showCreateGiveaway() {
    const modalContent = `
        <div class="create-giveaway-modal">
            <form id="create-giveaway-form">
                <div class="form-group">
                    <label for="giveaway-name">–ù–∞–∑–≤–∞–Ω–∏–µ —Ä–æ–∑—ã–≥—Ä—ã—à–∞:</label>
                    <input type="text" id="giveaway-name" required maxlength="100">
                </div>
                
                <div class="form-group">
                    <label for="giveaway-description">–û–ø–∏—Å–∞–Ω–∏–µ:</label>
                    <textarea id="giveaway-description" rows="3" maxlength="1000"></textarea>
                </div>
                
                <div class="form-row">
                    <div class="form-group">
                        <label for="start-date">–î–∞—Ç–∞ –Ω–∞—á–∞–ª–∞:</label>
                        <input type="date" id="start-date" required>
                    </div>
                    <div class="form-group">
                        <label for="end-date">–î–∞—Ç–∞ –æ–∫–æ–Ω—á–∞–Ω–∏—è:</label>
                        <input type="date" id="end-date" required>
                    </div>
                </div>
                
                <div class="form-group">
                    <label for="prize-places">–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø—Ä–∏–∑–æ–≤—ã—Ö –º–µ—Å—Ç:</label>
                    <input type="number" id="prize-places" min="1" max="20" value="1" required>
                </div>
                
                <div class="form-group">
                    <label>–ü—Ä–∏–∑—ã:</label>
                    <div id="prizes-container">
                        <div class="prize-input">
                            <input type="text" placeholder="1 –º–µ—Å—Ç–æ: –û–ø–∏—Å–∞–Ω–∏–µ –ø—Ä–∏–∑–∞" data-place="1">
                        </div>
                    </div>
                    <button type="button" onclick="addPrizeInput()" class="add-prize-btn">+ –î–æ–±–∞–≤–∏—Ç—å –ø—Ä–∏–∑</button>
                </div>
                
                <div class="form-group">
                    <label for="giveaway-photo">–§–æ—Ç–æ (–Ω–µ–æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ):</label>
                    <input type="file" id="giveaway-photo" accept="image/*">
                </div>
                
                <div class="modal-actions">
                    <button type="submit" class="btn-primary">üéâ –°–æ–∑–¥–∞—Ç—å —Ä–æ–∑—ã–≥—Ä—ã—à</button>
                    <button type="button" class="btn-secondary" onclick="closeModal()">–û—Ç–º–µ–Ω–∞</button>
                </div>
            </form>
        </div>
    `;
    
    showModal('–°–æ–∑–¥–∞—Ç—å —Ä–æ–∑—ã–≥—Ä—ã—à', modalContent);
    
    // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –º–∏–Ω–∏–º–∞–ª—å–Ω—É—é –¥–∞—Ç—É
    const today = new Date().toISOString().split('T')[0];
    document.getElementById('start-date').value = today;
    document.getElementById('end-date').value = today;
    
    // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ —Ñ–æ—Ä–º—ã
    document.getElementById('create-giveaway-form').addEventListener('submit', handleCreateGiveaway);
    
    // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∏–∑–º–µ–Ω–µ–Ω–∏—è –∫–æ–ª–∏—á–µ—Å—Ç–≤–∞ –º–µ—Å—Ç
    document.getElementById('prize-places').addEventListener('change', updatePrizeInputs);
}

// –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –ø–æ–ª—è –¥–ª—è –ø—Ä–∏–∑–∞
function addPrizeInput() {
    const container = document.getElementById('prizes-container');
    const currentInputs = container.querySelectorAll('.prize-input').length;
    const newPlace = currentInputs + 1;
    
    const prizeInput = document.createElement('div');
    prizeInput.className = 'prize-input';
    prizeInput.innerHTML = `
        <input type="text" placeholder="${newPlace} –º–µ—Å—Ç–æ: –û–ø–∏—Å–∞–Ω–∏–µ –ø—Ä–∏–∑–∞" data-place="${newPlace}">
        <button type="button" onclick="removePrizeInput(this)" class="remove-prize-btn">√ó</button>
    `;
    
    container.appendChild(prizeInput);
}

// –£–¥–∞–ª–µ–Ω–∏–µ –ø–æ–ª—è –ø—Ä–∏–∑–∞
function removePrizeInput(button) {
    button.parentElement.remove();
    updatePrizeInputsNumbers();
}

// –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –ø–æ–ª–µ–π –ø—Ä–∏–∑–æ–≤
function updatePrizeInputs() {
    const prizePlaces = parseInt(document.getElementById('prize-places').value);
    const container = document.getElementById('prizes-container');
    const currentInputs = container.querySelectorAll('.prize-input');
    
    // –î–æ–±–∞–≤–ª—è–µ–º –∏–ª–∏ —É–¥–∞–ª—è–µ–º –ø–æ–ª—è
    while (currentInputs.length < prizePlaces) {
        addPrizeInput();
    }
    
    while (currentInputs.length > prizePlaces) {
        currentInputs[currentInputs.length - 1].remove();
    }
    
    updatePrizeInputsNumbers();
}

// –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –Ω—É–º–µ—Ä–∞—Ü–∏–∏ –ø—Ä–∏–∑–æ–≤
function updatePrizeInputsNumbers() {
    const inputs = document.querySelectorAll('#prizes-container .prize-input input');
    inputs.forEach((input, index) => {
        const place = index + 1;
        input.dataset.place = place;
        input.placeholder = `${place} –º–µ—Å—Ç–æ: –û–ø–∏—Å–∞–Ω–∏–µ –ø—Ä–∏–∑–∞`;
    });
}

// –û–±—Ä–∞–±–æ—Ç–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è —Ä–æ–∑—ã–≥—Ä—ã—à–∞
async function handleCreateGiveaway(event) {
    event.preventDefault();
    
    const formData = new FormData();
    formData.append('name', document.getElementById('giveaway-name').value);
    formData.append('description', document.getElementById('giveaway-description').value);
    formData.append('start_date', document.getElementById('start-date').value);
    formData.append('end_date', document.getElementById('end-date').value);
    formData.append('prize_places', document.getElementById('prize-places').value);
    
    // –°–æ–±–∏—Ä–∞–µ–º –ø—Ä–∏–∑—ã
    const prizes = {};
    document.querySelectorAll('#prizes-container .prize-input input').forEach(input => {
        if (input.value.trim()) {
            prizes[input.dataset.place] = input.value.trim();
        }
    });
    formData.append('prizes', JSON.stringify(prizes));
    
    // –î–æ–±–∞–≤–ª—è–µ–º —Ñ–æ—Ç–æ –µ—Å–ª–∏ –µ—Å—Ç—å
    const photoFile = document.getElementById('giveaway-photo').files[0];
    if (photoFile) {
        formData.append('photo', photoFile);
    }
    
    try {
        const response = await fetch('/api/admin/create-giveaway', {
            method: 'POST',
            body: formData
        });
        
        const data = await response.json();
        
        if (data.success) {
            showNotification('–†–æ–∑—ã–≥—Ä—ã—à —É—Å–ø–µ—à–Ω–æ —Å–æ–∑–¥–∞–Ω!', 'success');
            closeModal();
            loadAdminGiveaways();
        } else {
            showNotification(data.message || '–û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è —Ä–æ–∑—ã–≥—Ä—ã—à–∞', 'error');
        }
    } catch (error) {
        console.error('–û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è —Ä–æ–∑—ã–≥—Ä—ã—à–∞:', error);
        showNotification('–û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ —Å–µ—Ä–≤–µ—Ä—É', 'error');
    }
}

// –ó–∞–≤–µ—Ä—à–µ–Ω–∏–µ —Ä–æ–∑—ã–≥—Ä—ã—à–∞
async function completeGiveaway(giveawayId) {
    if (!confirm('–í—ã —É–≤–µ—Ä–µ–Ω—ã, —á—Ç–æ —Ö–æ—Ç–∏—Ç–µ –∑–∞–≤–µ—Ä—à–∏—Ç—å —ç—Ç–æ—Ç —Ä–æ–∑—ã–≥—Ä—ã—à? –≠—Ç–æ –¥–µ–π—Å—Ç–≤–∏–µ –Ω–µ–ª—å–∑—è –æ—Ç–º–µ–Ω–∏—Ç—å.')) {
        return;
    }
    
    try {
        const response = await fetch('/api/admin/complete-giveaway', {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json',
            },
            body: JSON.stringify({
                giveaway_id: giveawayId
            })
        });
        
        const data = await response.json();
        
        if (data.success) {
            showNotification('–†–æ–∑—ã–≥—Ä—ã—à —É—Å–ø–µ—à–Ω–æ –∑–∞–≤–µ—Ä—à–µ–Ω!', 'success');
            loadAdminGiveaways();
            
            // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –ø–æ–±–µ–¥–∏—Ç–µ–ª–µ
            if (data.winner) {
                showWinnerInfo(data.winner, data.giveaway);
            }
        } else {
            showNotification(data.message || '–û—à–∏–±–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è —Ä–æ–∑—ã–≥—Ä—ã—à–∞', 'error');
        }
    } catch (error) {
        console.error('–û—à–∏–±–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è —Ä–æ–∑—ã–≥—Ä—ã—à–∞:', error);
        showNotification('–û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ —Å–µ—Ä–≤–µ—Ä—É', 'error');
    }
}

// –ü–æ–∫–∞–∑–∞—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –ø–æ–±–µ–¥–∏—Ç–µ–ª–µ
function showWinnerInfo(winner, giveaway) {
    const modalContent = `
        <div class="winner-info-modal">
            <div class="winner-celebration">üéâ</div>
            <h3>–ü–æ–±–µ–¥–∏—Ç–µ–ª—å –æ–ø—Ä–µ–¥–µ–ª–µ–Ω!</h3>
            <div class="winner-details">
                <div class="winner-card">
                    <h4>${winner.full_name}</h4>
                    <p>ID: ${winner.user_id}</p>
                    <p>–í—ã–∏–≥—Ä—ã—à–Ω—ã–π –±–∏–ª–µ—Ç: ‚Ññ${winner.ticket_number}</p>
                </div>
            </div>
            <p>–†–æ–∑—ã–≥—Ä—ã—à: <strong>${giveaway.name}</strong></p>
            <div class="modal-actions">
                <button class="btn-primary" onclick="closeModal()">–û—Ç–ª–∏—á–Ω–æ!</button>
            </div>
        </div>
    `;
    
    showModal('üèÜ –ü–æ–±–µ–¥–∏—Ç–µ–ª—å', modalContent);
}

// –£–¥–∞–ª–µ–Ω–∏–µ —Ä–æ–∑—ã–≥—Ä—ã—à–∞
async function deleteGiveaway(giveawayId) {
    if (!confirm('–í—ã —É–≤–µ—Ä–µ–Ω—ã, —á—Ç–æ —Ö–æ—Ç–∏—Ç–µ —É–¥–∞–ª–∏—Ç—å —ç—Ç–æ—Ç —Ä–æ–∑—ã–≥—Ä—ã—à? –í—Å–µ –±–∏–ª–µ—Ç—ã –±—É–¥—É—Ç –≤–æ–∑–≤—Ä–∞—â–µ–Ω—ã —É—á–∞—Å—Ç–Ω–∏–∫–∞–º.')) {
        return;
    }
    
    try {
        const response = await fetch('/api/admin/delete-giveaway', {
            method: 'DELETE',
            headers: {
                'Content-Type': 'application/json',
            },
            body: JSON.stringify({
                giveaway_id: giveawayId
            })
        });
        
        const data = await response.json();
        
        if (data.success) {
            showNotification('–†–æ–∑—ã–≥—Ä—ã—à —É–¥–∞–ª–µ–Ω, –±–∏–ª–µ—Ç—ã –≤–æ–∑–≤—Ä–∞—â–µ–Ω—ã —É—á–∞—Å—Ç–Ω–∏–∫–∞–º', 'success');
            loadAdminGiveaways();
        } else {
            showNotification(data.message || '–û—à–∏–±–∫–∞ —É–¥–∞–ª–µ–Ω–∏—è —Ä–æ–∑—ã–≥—Ä—ã—à–∞', 'error');
        }
    } catch (error) {
        console.error('–û—à–∏–±–∫–∞ —É–¥–∞–ª–µ–Ω–∏—è —Ä–æ–∑—ã–≥—Ä—ã—à–∞:', error);
        showNotification('–û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ —Å–µ—Ä–≤–µ—Ä—É', 'error');
    }
}

// –ü—Ä–æ—Å–º–æ—Ç—Ä —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤ —Ä–æ–∑—ã–≥—Ä—ã—à–∞
async function viewGiveawayParticipants(giveawayId) {
    try {
        const response = await fetch(`/api/admin/giveaway/${giveawayId}/participants`);
        const data = await response.json();
        
        if (data.success) {
            const participantsHtml = data.participants.length > 0 ?
                data.participants.map((participant, index) => `
                    <div class="participant-item">
                        <span class="participant-number">${index + 1}.</span>
                        <div class="participant-info">
                            <strong>${participant.full_name}</strong>
                            <span>@${participant.username || '–Ω–µ—Ç'}</span>
                            <span>ID: ${participant.user_id}</span>
                        </div>
                        <div class="participant-tickets">
                            ${participant.tickets} –±–∏–ª–µ—Ç–æ–≤
                        </div>
                    </div>
                `).join('') :
                '<p class="empty-message">–ù–µ—Ç —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤</p>';
            
            const modalContent = `
                <div class="participants-modal">
                    <h3>üë• –£—á–∞—Å—Ç–Ω–∏–∫–∏ —Ä–æ–∑—ã–≥—Ä—ã—à–∞</h3>
                    <div class="participants-stats">
                        <span>–í—Å–µ–≥–æ —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤: <strong>${data.participants.length}</strong></span>
                        <span>–í—Å–µ–≥–æ –±–∏–ª–µ—Ç–æ–≤: <strong>${data.total_tickets}</strong></span>
                    </div>
                    <div class="participants-list">
                        ${participantsHtml}
                    </div>
                    <div class="modal-actions">
                        <button class="btn-secondary" onclick="closeModal()">–ó–∞–∫—Ä—ã—Ç—å</button>
                    </div>
                </div>
            `;
            
            showModal('–£—á–∞—Å—Ç–Ω–∏–∫–∏ —Ä–æ–∑—ã–≥—Ä—ã—à–∞', modalContent);
        }
    } catch (error) {
        console.error('–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤:', error);
        showNotification('–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤', 'error');
    }
}

// –ó–∞–≥—Ä—É–∑–∫–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –¥–ª—è –∞–¥–º–∏–Ω–∫–∏
async function loadAdminUsers() {
    // –§—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω–æ—Å—Ç—å –ø–æ–∏—Å–∫–∞ –∏ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º–∏
}

// –ü–æ–∏—Å–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
async function searchUsers() {
    const query = document.getElementById('user-search').value.trim();
    if (query.length < 3) return;
    
    try {
        const response = await fetch(`/api/admin/users/search?q=${encodeURIComponent(query)}`);
        const data = await response.json();
        
        if (data.success) {
            displaySearchResults(data.users);
        }
    } catch (error) {
        console.error('–û—à–∏–±–∫–∞ –ø–æ–∏—Å–∫–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π:', error);
    }
}

// –û—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤ –ø–æ–∏—Å–∫–∞
function displaySearchResults(users) {
    const resultArea = document.getElementById('user-management-result');
    
    if (users.length === 0) {
        resultArea.innerHTML = '<p>–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω—ã</p>';
        return;
    }
    
    resultArea.innerHTML = users.map(user => `
        <div class="user-result-item">
            <div class="user-info">
                <strong>${user.full_name}</strong>
                <span>@${user.username || '–Ω–µ—Ç'}</span>
                <span>ID: ${user.user_id}</span>
            </div>
            <div class="user-stats">
                <span>–ë–∏–ª–µ—Ç–æ–≤: ${user.balance}</span>
                <span>–°—Ç–∞—Ç—É—Å: ${user.banned ? '–ó–∞–±–∞–Ω–µ–Ω' : '–ê–∫—Ç–∏–≤–µ–Ω'}</span>
            </div>
            <div class="user-actions">
                <button class="admin-btn" onclick="manageUser(${user.user_id})">–£–ø—Ä–∞–≤–ª—è—Ç—å</button>
            </div>
        </div>
    `).join('');
}

// –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º
function manageUser(userId) {
    const modalContent = `
        <div class="manage-user-modal">
            <h3>–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º ID: ${userId}</h3>
            <div class="user-management-actions">
                <button class="user-action-btn" onclick="showTicketsManagement(${userId}, 'add')">
                    üí∞ –ù–∞—á–∏—Å–ª–∏—Ç—å –±–∏–ª–µ—Ç—ã
                </button>
                <button class="user-action-btn" onclick="showTicketsManagement(${userId}, 'remove')">
                    üí∏ –°–ø–∏—Å–∞—Ç—å –±–∏–ª–µ—Ç—ã
                </button>
                <button class="user-action-btn danger" onclick="banUser(${userId})">
                    üö´ –ó–∞–±–∞–Ω–∏—Ç—å
                </button>
                <button class="user-action-btn success" onclick="unbanUser(${userId})">
                    ‚úÖ –†–∞–∑–±–∞–Ω–∏—Ç—å
                </button>
            </div>
            <div class="modal-actions">
                <button class="btn-secondary" onclick="closeModal()">–ó–∞–∫—Ä—ã—Ç—å</button>
            </div>
        </div>
    `;
    
    showModal('–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º', modalContent);
}

// –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –±–∏–ª–µ—Ç–∞–º–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
function showTicketsManagement(userId, action) {
    const actionText = action === 'add' ? '–Ω–∞—á–∏—Å–ª–∏—Ç—å' : '—Å–ø–∏—Å–∞—Ç—å';
    const icon = action === 'add' ? 'üí∞' : 'üí∏';
    
    const modalContent = `
        <div class="tickets-management-modal">
            <h3>${icon} ${actionText.charAt(0).toUpperCase() + actionText.slice(1)} –±–∏–ª–µ—Ç—ã</h3>
            <p>–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å ID: ${userId}</p>
            
            <div class="tickets-input-section">
                <label for="tickets-amount">–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –±–∏–ª–µ—Ç–æ–≤:</label>
                <div class="tickets-input-group">
                    <button type="button" onclick="changeTicketsAmount(-1)">-</button>
                    <input type="number" id="tickets-amount" value="1" min="1" max="1000">
                    <button type="button" onclick="changeTicketsAmount(1)">+</button>
                </div>
                <div class="quick-buttons">
                    <button type="button" onclick="setTicketsAmount(1)">1</button>
                    <button type="button" onclick="setTicketsAmount(5)">5</button>
                    <button type="button" onclick="setTicketsAmount(10)">10</button>
                    <button type="button" onclick="setTicketsAmount(50)">50</button>
                </div>
            </div>
            
            <div class="modal-actions">
                <button class="btn-primary" onclick="confirmTicketsAction(${userId}, '${action}')">
                    ${icon} ${actionText.charAt(0).toUpperCase() + actionText.slice(1)}
                </button>
                <button class="btn-secondary" onclick="closeModal()">–û—Ç–º–µ–Ω–∞</button>
            </div>
        </div>
    `;
    
    showModal(`${actionText.charAt(0).toUpperCase() + actionText.slice(1)} –±–∏–ª–µ—Ç—ã`, modalContent);
}

// –ò–∑–º–µ–Ω–µ–Ω–∏–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–∞ –±–∏–ª–µ—Ç–æ–≤ –¥–ª—è –∞–¥–º–∏–Ω–∞
function changeTicketsAmount(delta) {
    const input = document.getElementById('tickets-amount');
    const currentValue = parseInt(input.value) || 1;
    const newValue = Math.max(1, Math.min(1000, currentValue + delta));
    input.value = newValue;
}

// –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∫–æ–ª–∏—á–µ—Å—Ç–≤–∞ –±–∏–ª–µ—Ç–æ–≤ –¥–ª—è –∞–¥–º–∏–Ω–∞
function setTicketsAmount(amount) {
    const input = document.getElementById('tickets-amount');
    input.value = Math.max(1, Math.min(1000, amount));
}

// –ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ –¥–µ–π—Å—Ç–≤–∏—è —Å –±–∏–ª–µ—Ç–∞–º–∏
async function confirmTicketsAction(userId, action) {
    const amount = parseInt(document.getElementById('tickets-amount').value);
    
    if (amount <= 0 || amount > 1000) {
        showNotification('–ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –±–∏–ª–µ—Ç–æ–≤', 'error');
        return;
    }
    
    try {
        const response = await fetch('/api/admin/user-tickets', {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json',
            },
            body: JSON.stringify({
                user_id: userId,
                action: action,
                amount: amount
            })
        });
        
        const data = await response.json();
        
        if (data.success) {
            showNotification(`–ë–∏–ª–µ—Ç—ã —É—Å–ø–µ—à–Ω–æ ${action === 'add' ? '–Ω–∞—á–∏—Å–ª–µ–Ω—ã' : '—Å–ø–∏—Å–∞–Ω—ã'}`, 'success');
            closeModal();
        } else {
            showNotification(data.message || '–û—à–∏–±–∫–∞ –æ–ø–µ—Ä–∞—Ü–∏–∏', 'error');
        }
    } catch (error) {
        console.error('–û—à–∏–±–∫–∞ –æ–ø–µ—Ä–∞—Ü–∏–∏ —Å –±–∏–ª–µ—Ç–∞–º–∏:', error);
        showNotification('–û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ —Å–µ—Ä–≤–µ—Ä—É', 'error');
    }
}

// –ë–∞–Ω –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
async function banUser(userId) {
    if (!confirm(`–í—ã —É–≤–µ—Ä–µ–Ω—ã, —á—Ç–æ —Ö–æ—Ç–∏—Ç–µ –∑–∞–±–∞–Ω–∏—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è ${userId}?`)) {
        return;
    }
    
    try {
        const response = await fetch('/api/admin/ban-user', {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json',
            },
            body: JSON.stringify({
                user_id: userId
            })
        });
        
        const data = await response.json();
        
        if (data.success) {
            showNotification('–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –∑–∞–±–∞–Ω–µ–Ω', 'success');
            closeModal();
        } else {
            showNotification(data.message || '–û—à–∏–±–∫–∞ –±–∞–Ω–∞', 'error');
        }
    } catch (error) {
        console.error('–û—à–∏–±–∫–∞ –±–∞–Ω–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è:', error);
        showNotification('–û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ —Å–µ—Ä–≤–µ—Ä—É', 'error');
    }
}

// –†–∞–∑–±–∞–Ω –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
async function unbanUser(userId) {
    try {
        const response = await fetch('/api/admin/unban-user', {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json',
            },
            body: JSON.stringify({
                user_id: userId
            })
        });
        
        const data = await response.json();
        
        if (data.success) {
            showNotification('–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Ä–∞–∑–±–∞–Ω–µ–Ω', 'success');
            closeModal();
        } else {
            showNotification(data.message || '–û—à–∏–±–∫–∞ —Ä–∞–∑–±–∞–Ω–∞', 'error');
        }
    } catch (error) {
        console.error('–û—à–∏–±–∫–∞ —Ä–∞–∑–±–∞–Ω–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è:', error);
        showNotification('–û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ —Å–µ—Ä–≤–µ—Ä—É', 'error');
    }
}

// –í–°–ü–û–ú–û–ì–ê–¢–ï–õ–¨–ù–´–ï –§–£–ù–ö–¶–ò–ò

// –ü–æ–∫–∞–∑–∞—Ç—å –º–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ
function showModal(title, content) {
    document.getElementById('modal-title').textContent = title;
    document.getElementById('modal-content').innerHTML = content;
    document.getElementById('modal-overlay').classList.remove('hidden');
}

// –ó–∞–∫—Ä—ã—Ç—å –º–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ
function closeModal() {
    document.getElementById('modal-overlay').classList.add('hidden');
}

// –ü–æ–∫–∞–∑–∞—Ç—å/—Å–∫—Ä—ã—Ç—å –∑–∞–≥—Ä—É–∑–æ—á–Ω—ã–π —ç–∫—Ä–∞–Ω
function showLoading(show) {
    const loadingScreen = document.getElementById('loading-screen');
    const mainPage = document.getElementById('main-page');
    
    if (show) {
        loadingScreen.classList.remove('hidden');
        mainPage.classList.add('hidden');
    } else {
        loadingScreen.classList.add('hidden');
        mainPage.classList.remove('hidden');
    }
}

// –ü–æ–∫–∞–∑–∞—Ç—å —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ
function showNotification(message, type = 'info') {
    const container = document.getElementById('notifications-container');
    
    const notification = document.createElement('div');
    notification.className = `notification ${type}`;
    notification.textContent = message;
    
    container.appendChild(notification);
    
    // –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ —É–¥–∞–ª–µ–Ω–∏–µ —á–µ—Ä–µ–∑ 3 —Å–µ–∫—É–Ω–¥—ã
    setTimeout(() => {
        if (notification.parentNode) {
            notification.parentNode.removeChild(notification);
        }
    }, 3000);
}

// –ü–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏–µ —Ç–µ–º—ã
function toggleTheme() {
    currentTheme = currentTheme === 'light' ? 'dark' : 'light';
    document.documentElement.setAttribute('data-theme', currentTheme);
    
    const themeToggle = document.getElementById('theme-toggle');
    themeToggle.textContent = currentTheme === 'light' ? 'üåô' : '‚òÄÔ∏è';
    
    // –°–æ—Ö—Ä–∞–Ω—è–µ–º —Ç–µ–º—É
    localStorage.setItem('theme', currentTheme);
}

// –ó–∞–≥—Ä—É–∑–∫–∞ —Ç–µ–º—ã
function loadTheme() {
    const savedTheme = localStorage.getItem('theme');
    if (savedTheme) {
        currentTheme = savedTheme;
        document.documentElement.setAttribute('data-theme', currentTheme);
        
        const themeToggle = document.getElementById('theme-toggle');
        themeToggle.textContent = currentTheme === 'light' ? 'üåô' : '‚òÄÔ∏è';
    }
}

// –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ
function updateUserInfo() {
    if (currentUser) {
        document.getElementById('profile-name').textContent = 
            `${currentUser.first_name} ${currentUser.last_name || ''}`.trim();
        document.getElementById('profile-id').textContent = `ID: ${currentUser.id}`;
        
        const initials = (currentUser.first_name[0] + (currentUser.last_name?.[0] || '')).toUpperCase();
        document.getElementById('profile-initials').textContent = initials;
    }
}

// –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –±–∞–ª–∞–Ω—Å–∞
function updateUserBalance(balance) {
    document.getElementById('user-balance').textContent = balance || 0;
    userStats.balance = balance || 0;
}

// –ü–æ–ª—É—á–µ–Ω–∏–µ –º–µ–¥–∞–ª–∏ –¥–ª—è –º–µ—Å—Ç–∞
function getPlaceMedal(place) {
    const placeNum = parseInt(place);
    if (placeNum === 1) return 'ü•á';
    if (placeNum === 2) return 'ü•à';
    if (placeNum === 3) return 'ü•â';
    return 'üèÖ';
}

// –§–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –¥–∞—Ç—ã
function formatDate(dateString) {
    const date = new Date(dateString);
    return date.toLocaleDateString('ru-RU', {
        day: '2-digit',
        month: '2-digit',
        year: 'numeric'
    });
}

// Debounce —Ñ—É–Ω–∫—Ü–∏—è
function debounce(func, wait) {
    let timeout;
    return function executedFunction(...args) {
        const later = () => {
            clearTimeout(timeout);
            func(...args);
        };
        clearTimeout(timeout);
        timeout = setTimeout(later, wait);
    };
}

// –ó–∞–≥—Ä—É–∑–∫–∞ –∞–¥–º–∏–Ω—Å–∫–æ–π —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏
async function loadAdminStatistics() {
    try {
        const response = await fetch('/api/admin/statistics');
        const data = await response.json();
        
        if (data.success) {
            displayDetailedStats(data.statistics);
        }
    } catch (error) {
        console.error('–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏:', error);
    }
}

// –û—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ –¥–µ—Ç–∞–ª—å–Ω–æ–π —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏
function displayDetailedStats(stats) {
    const container = document.getElementById('detailed-stats');
    
    container.innerHTML = `
        <div class="stats-section">
            <h4>üìä –û–±—â–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞</h4>
            <div class="stats-list">
                <div class="stat-row">
                    <span>–í—Å–µ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π:</span>
                    <span>${stats.total_users}</span>
                </div>
                <div class="stat-row">
                    <span>–ê–∫—Ç–∏–≤–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π:</span>
                    <span>${stats.active_users}</span>
                </div>
                <div class="stat-row">
                    <span>–ó–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω–Ω—ã—Ö:</span>
                    <span>${stats.banned_users}</span>
                </div>
            </div>
        </div>
        
        <div class="stats-section">
            <h4>üéÅ –†–æ–∑—ã–≥—Ä—ã—à–∏</h4>
            <div class="stats-list">
                <div class="stat-row">
                    <span>–ê–∫—Ç–∏–≤–Ω—ã–µ —Ä–æ–∑—ã–≥—Ä—ã—à–∏:</span>
                    <span>${stats.active_giveaways}</span>
                </div>
                <div class="stat-row">
                    <span>–ó–∞–≤–µ—Ä—à–µ–Ω–Ω—ã–µ:</span>
                    <span>${stats.completed_giveaways}</span>
                </div>
                <div class="stat-row">
                    <span>–í—Å–µ–≥–æ –±–∏–ª–µ—Ç–æ–≤ –≤—ã–¥–∞–Ω–æ:</span>
                    <span>${stats.total_tickets}</span>
                </div>
            </div>
        </div>
        
        <div class="stats-section">
            <h4>üìà –ê–∫—Ç–∏–≤–Ω–æ—Å—Ç—å</h4>
            <div class="stats-list">
                <div class="stat-row">
                    <span>–°—Ä–µ–¥–Ω–∏–π –±–∞–ª–∞–Ω—Å:</span>
                    <span>${stats.average_balance} –±–∏–ª–µ—Ç–æ–≤</span>
                </div>
                <div class="stat-row">
                    <span>–í—Å–µ–≥–æ —Ä–µ—Ñ–µ—Ä–∞–ª–æ–≤:</span>
                    <span>${stats.total_referrals}</span>
                </div>
                <div class="stat-row">
                    <span>–ê–∫—Ç–∏–≤–Ω–æ—Å—Ç—å —Å–µ–≥–æ–¥–Ω—è:</span>
                    <span>${stats.today_activity}</span>
                </div>
            </div>
        </div>
    `;
}
